{
    "componentChunkName": "component---src-templates-docs-tsx",
    "path": "/docs/mirrors/ubuntu/",
    "result": {"data":{"mdx":{"frontmatter":{"title":"使用 Ubuntu 镜像源","description":"西安交通大学软件镜像站 Ubuntu 镜像源、Ubuntu Releases 镜像源与 Ubuntu Ports 镜像源使用帮助。"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar data = [{\n  id: 'impish',\n  title: '21.10 (Impish Indri)'\n}, {\n  id: 'hirsute',\n  title: '21.04 (Hirsute Hippo)'\n}, {\n  id: 'focal',\n  title: '20.04 LTS (Focal Fossa)'\n}, {\n  id: 'bionic',\n  title: '18.04 LTS (Bionic Beaver)'\n}, {\n  id: 'xenial',\n  title: '16.04 LTS (Xenial Xerus)'\n}, {\n  id: 'trusty',\n  title: '14.04 LTS (Trusty Tahr)'\n}];\n\nvar pattern = function pattern(id, enableProposed, enableSource, isPorts) {\n  return \"# Config generated by XJTU Mirrors Config Generator; DO NOT EDIT.\\n\\ndeb https://mirrors.xjtu.edu.cn/ubuntu\".concat(isPorts ? '-ports' : '', \"/ \").concat(id, \" main restricted universe multiverse\\n\").concat(enableSource ? '' : '# ', \"deb-src https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \" main restricted universe multiverse\\ndeb https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \"-updates main restricted universe multiverse\\n\").concat(enableSource ? '' : '# ', \"deb-src https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \"-updates main restricted universe multiverse\\ndeb https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \"-backports main restricted universe multiverse\\n\").concat(enableSource ? '' : '# ', \"deb-src https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \"-backports main restricted universe multiverse\\ndeb https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \"-security main restricted universe multiverse\\n\").concat(enableSource ? '' : '# ', \"deb-src https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \"-security main restricted universe multiverse\\n\\n\").concat(enableProposed ? '' : '# ', \"deb https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \"-proposed main restricted universe multiverse\\n\").concat(enableProposed && enableSource ? '' : '# ', \"deb-src https://mirrors.xjtu.edu.cn/ubuntu\").concat(isPorts ? '-ports' : '', \"/ \").concat(id, \"-proposed main restricted universe multiverse\\n\");\n};\n\nvar ConfigGenerator = function ConfigGenerator() {\n  var _React$useState = React.useState({\n    version: 2,\n    enableProposed: false,\n    enableSource: false,\n    isPorts: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  return mdx(\"div\", null, mdx(\"p\", null, \"\\u9009\\u62E9 Ubuntu \\u7248\\u672C\\uFF1A\", mdx(\"select\", {\n    value: state.version,\n    onChange: function onChange(e) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        version: e.target.value\n      }));\n    }\n  }, data.map(function (item, key) {\n    return mdx(\"option\", {\n      key: key,\n      value: key\n    }, \"Ubuntu \", item.title);\n  })), mdx(\"br\", null), mdx(\"div\", {\n    className: \"space-x-2\"\n  }, mdx(\"label\", {\n    className: \"text-sm\"\n  }, mdx(\"input\", {\n    name: \"enableProposed\",\n    type: \"checkbox\",\n    checked: state.enableProposed,\n    onChange: function onChange(e) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        enableProposed: e.target.checked\n      }));\n    }\n  }), \"\\u4F7F\\u7528\\u9884\\u53D1\\u5E03\\u8F6F\\u4EF6\\u6E90\"), mdx(\"label\", {\n    className: \"text-sm\"\n  }, mdx(\"input\", {\n    name: \"enableSource\",\n    type: \"checkbox\",\n    checked: state.enableSource,\n    onChange: function onChange(e) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        enableSource: e.target.checked\n      }));\n    }\n  }), \"\\u4F7F\\u7528\\u8F6F\\u4EF6\\u6E90\\u7801\\u955C\\u50CF\"), mdx(\"label\", {\n    className: \"text-sm\"\n  }, mdx(\"input\", {\n    name: \"isPorts\",\n    type: \"checkbox\",\n    checked: state.isPorts,\n    onChange: function onChange(e) {\n      return setState(_objectSpread(_objectSpread({}, state), {}, {\n        isPorts: e.target.checked\n      }));\n    }\n  }), \"\\u4F7F\\u7528 Ubuntu Ports \\u955C\\u50CF\"))), mdx(\"pre\", null, mdx(\"code\", {\n    className: \"language-shell\"\n  }, pattern(data[state.version].id, state.enableProposed, state.enableSource, state.isPorts))));\n};\n\nvar _frontmatter = {\n  \"title\": \"使用 Ubuntu 镜像源\",\n  \"description\": \"西安交通大学软件镜像站 Ubuntu 镜像源、Ubuntu Releases 镜像源与 Ubuntu Ports 镜像源使用帮助。\"\n};\nvar layoutProps = {\n  data: data,\n  pattern: pattern,\n  ConfigGenerator: ConfigGenerator,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"使用说明\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u4F7F\\u7528\\u8BF4\\u660E\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\",\n    \"aria-label\": \"使用说明 permalink\",\n    \"className\": \"anchor after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"手动修改\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u624B\\u52A8\\u4FEE\\u6539\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E6%89%8B%E5%8A%A8%E4%BF%AE%E6%94%B9\",\n    \"aria-label\": \"手动修改 permalink\",\n    \"className\": \"anchor after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(\"h3\", {\n    \"id\": \"配置生成器\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, \"\\u914D\\u7F6E\\u751F\\u6210\\u5668\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"#%E9%85%8D%E7%BD%AE%E7%94%9F%E6%88%90%E5%99%A8\",\n    \"aria-label\": \"配置生成器 permalink\",\n    \"className\": \"anchor after\"\n  }, mdx(\"span\", {\n    parentName: \"a\"\n  }, \"#\"))), mdx(ConfigGenerator, {\n    mdxType: \"ConfigGenerator\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"docs/mirrors/ubuntu","excerpt":"使用说明 手动修改 配置生成器","tableOfContents":{"items":[{"url":"#使用说明","title":"使用说明","items":[{"url":"#手动修改","title":"手动修改"},{"url":"#配置生成器","title":"配置生成器"}]}]}}},"pageContext":{"slug":"docs/mirrors/ubuntu"}},
    "staticQueryHashes": ["3891078749"]}